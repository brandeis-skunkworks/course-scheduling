{"ast":null,"code":"var _jsxFileName = \"/Users/archerheffern/Desktop/Code/course-scheduling/frontend/src/block-sched/ImageBlockSched.js\";\nimport React from 'react';\nimport './BlockSched.css';\nimport blocks from './blocks';\nimport blocks_pic from '../img/blocks.png';\nimport mapAreas from './img-areas-map'; // import ImageMapper from 'react-image-mapper';\n\nimport { connect } from 'react-redux';\nimport { chosenCourse, removeChosenCourse, addChosenCourse, deleteChosenCourse } from '../redux/actions';\n\nclass ImageBlockSched extends React.Component {\n  constructor(props) {\n    super(props);\n    this.load = this.load.bind(this);\n    this.clicked = this.clicked.bind(this);\n  }\n\n  load() {\n    console.log('Image loaded');\n  }\n\n  findBlockByName(name) {\n    return blocks.filter(item => item.name === name)[0];\n  }\n\n  chooseColor(block) {\n    let color = \"rgba(192,192,192,0.3)\"; // grey opaque\n\n    const id = block.id;\n\n    if (id in this.props.value) {\n      const pref = this.props.value[id];\n\n      switch (pref.preference) {\n        case \"0\":\n          // MUST \n          color = \"rgba(255,0,0,0.3)\"; // red opaque\n\n          break;\n\n        case \"1\": // PREFERRED\n\n        case \"2\":\n        case \"3\":\n          color = \"rgba(255,255,0,0.3)\"; // yellow opaque\n\n          break;\n\n        case \"4\":\n          // NO\n          color = \"rgba(0, 0, 0, 0.5)\"; // black opaque\n\n          break;\n\n        default:\n          // DEFAULT (NOT CHOSEN / IN REVIEW MODE)\n          color = \"rgba(192,192,192,0.3)\";\n        // grey opaque\n      }\n    } else if (!this.props.review && id in this.props.chosen_courses) {\n      color = \"rgba(0,255,0,0.3)\"; // green opaque (CHOSEN - REVIEW MODE)\n    }\n\n    return color;\n  }\n\n  handleClick(course) {\n    console.log(course);\n\n    if (course.id in this.props.value) {\n      // if this block is submitted, delete other ones and choose this block only\n      Object.entries(this.props.chosen_courses).map(arr => arr[1]).forEach(val => this.props.deleteChosenCourse(val.id));\n      this.props.addChosenCourse(course);\n    }\n\n    if (course.id in this.props.chosen_courses) {\n      // if this block is already chosen, remove it\n      this.props.deleteChosenCourse(course.id);\n      this.props.removeChosenCourse();\n    } else if (!this.props.review) {\n      // if this block is not chosen and the page is not in reviewing mode:\n      // delete all chosen submitted blocks\n      Object.entries(this.props.chosen_courses).map(arr => arr[1]).forEach(val => {\n        if (val.id in this.props.value) {\n          this.props.deleteChosenCourse(val.id);\n        }\n      }); // add to the chosen blocks list\n\n      this.props.chosenCourse(course);\n      this.props.addChosenCourse(course);\n    }\n  }\n\n  clicked(area) {\n    console.log(`You clicked on ${area.name}!`);\n    const blockName = area.name.split(\"-\")[0];\n    const course = this.findBlockByName(blockName);\n    this.handleClick(course);\n  }\n\n  changeBlockColor() {\n    // find the appropriate color for each block and create new MAP areas for ImageMapper\n    const newAreas = mapAreas.map(area => {\n      const blockName = area.name.split(\"-\")[0];\n      const course = this.findBlockByName(blockName);\n      const color = this.chooseColor(course);\n      area.preFillColor = color;\n      return area;\n    });\n    return newAreas;\n  }\n\n  render() {\n    const URL = blocks_pic;\n    const MAP = {\n      name: \"my-map\",\n      areas: this.changeBlockColor()\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pref_block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Mapper, {\n      url: URL,\n      map: MAP,\n      load: this.load,\n      clicked: this.clicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nfunction Mapper(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  });\n}\n\nconst mapStateToProps = state => ({\n  chosen: state.chosen,\n  chosen_courses: state.chosen_courses,\n  value: state.value,\n  review: state.review\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    chosenCourse: chosen => {\n      dispatch(chosenCourse(chosen));\n    },\n    removeChosenCourse: () => {\n      dispatch(removeChosenCourse());\n    },\n    addChosenCourse: chosen => {\n      dispatch(addChosenCourse(chosen));\n    },\n    deleteChosenCourse: id => {\n      dispatch(deleteChosenCourse(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageBlockSched);","map":{"version":3,"names":["React","blocks","blocks_pic","mapAreas","connect","chosenCourse","removeChosenCourse","addChosenCourse","deleteChosenCourse","ImageBlockSched","Component","constructor","props","load","bind","clicked","console","log","findBlockByName","name","filter","item","chooseColor","block","color","id","value","pref","preference","review","chosen_courses","handleClick","course","Object","entries","map","arr","forEach","val","area","blockName","split","changeBlockColor","newAreas","preFillColor","render","URL","MAP","areas","Mapper","mapStateToProps","state","chosen","mapDispatchToProps","dispatch"],"sources":["/Users/archerheffern/Desktop/Code/course-scheduling/frontend/src/block-sched/ImageBlockSched.js"],"sourcesContent":["import React from 'react';\nimport './BlockSched.css';\n\nimport blocks from './blocks';\nimport blocks_pic from '../img/blocks.png';\nimport mapAreas from './img-areas-map';\n// import ImageMapper from 'react-image-mapper';\n\nimport { connect } from 'react-redux';\nimport { chosenCourse, removeChosenCourse, addChosenCourse, deleteChosenCourse } from '../redux/actions';\n\nclass ImageBlockSched extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.load = this.load.bind(this);\n        this.clicked = this.clicked.bind(this);\n    }\n\n    load() {\n        console.log('Image loaded');\n    }\n\n    findBlockByName(name) {\n        return blocks.filter(item => item.name === name)[0];\n    }\n\n    chooseColor(block) {\n        let color = \"rgba(192,192,192,0.3)\"; // grey opaque\n        const id = block.id;\n\n        if (id in this.props.value) {\n            const pref = this.props.value[id];\n\n            switch (pref.preference) {\n                case \"0\": // MUST \n                    color = \"rgba(255,0,0,0.3)\" // red opaque\n                    break;\n                case \"1\": // PREFERRED\n                case \"2\":\n                case \"3\":\n                    color = \"rgba(255,255,0,0.3)\" // yellow opaque\n                    break;\n\n                case \"4\": // NO\n                    color = \"rgba(0, 0, 0, 0.5)\" // black opaque\n                    break;\n\n                default: // DEFAULT (NOT CHOSEN / IN REVIEW MODE)\n                    color = \"rgba(192,192,192,0.3)\"; // grey opaque\n            }\n        } else if (!this.props.review && (id in this.props.chosen_courses)) {\n            color = \"rgba(0,255,0,0.3)\" // green opaque (CHOSEN - REVIEW MODE)\n        }\n        return color;\n    }\n\n    handleClick(course) {\n        console.log(course);\n        if (course.id in this.props.value) {\n            // if this block is submitted, delete other ones and choose this block only\n            Object.entries(this.props.chosen_courses).map(arr => arr[1]).forEach(val => this.props.deleteChosenCourse(val.id));\n            this.props.addChosenCourse(course);\n        }\n        if (course.id in this.props.chosen_courses) {\n            // if this block is already chosen, remove it\n            this.props.deleteChosenCourse(course.id);\n            this.props.removeChosenCourse();\n        } else if (!this.props.review) {\n            // if this block is not chosen and the page is not in reviewing mode:\n            // delete all chosen submitted blocks\n            Object.entries(this.props.chosen_courses).map(arr => arr[1]).forEach(val => {\n                if (val.id in this.props.value) {\n                    this.props.deleteChosenCourse(val.id);\n                }\n            });\n            // add to the chosen blocks list\n            this.props.chosenCourse(course);\n            this.props.addChosenCourse(course);\n        }\n    }\n\n    clicked(area) {\n        console.log(`You clicked on ${area.name}!`);\n        const blockName = area.name.split(\"-\")[0];\n\n        const course = this.findBlockByName(blockName);\n        this.handleClick(course);\n    }\n\n    changeBlockColor() {\n        // find the appropriate color for each block and create new MAP areas for ImageMapper\n        const newAreas = mapAreas.map(area => {\n            const blockName = area.name.split(\"-\")[0];\n            const course = this.findBlockByName(blockName);\n\n            const color = this.chooseColor(course);\n            area.preFillColor = color;\n            return area;\n        });\n        return newAreas;\n    }\n\n    render() {\n        const URL = blocks_pic;\n        const MAP = {\n            name: \"my-map\",\n            areas: this.changeBlockColor()\n        }\n\n        return (\n            <div className=\"pref_block\">\n                <Mapper url={URL} map={MAP} load={this.load} clicked={this.clicked} />\n            </div>\n        );\n    }\n}\n\nfunction Mapper(props) {\n    return (\n        <div className=\"container\">\n            {/* <ImageMapper src={props.url} map={props.map} width={800} imgWidth={1472} onLoad={props.load} onClick={area => props.clicked(area)}/> */}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    chosen: state.chosen,\n    chosen_courses: state.chosen_courses,\n    value: state.value,\n    review: state.review,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        chosenCourse: (chosen) => { dispatch(chosenCourse(chosen)) },\n        removeChosenCourse: () => { dispatch(removeChosenCourse()) },\n        addChosenCourse: (chosen) => { dispatch(addChosenCourse(chosen)) },\n        deleteChosenCourse: (id) => { dispatch(deleteChosenCourse(id)) },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageBlockSched);"],"mappings":"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"},"metadata":{},"sourceType":"module"}
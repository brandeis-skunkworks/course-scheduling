{"ast":null,"code":"var _jsxFileName = \"/Users/archerheffern/Desktop/Code/course-scheduling/frontend/src/Row.js\";\nimport React from 'react';\nimport 'child_process'; // replace ^ if using ES modules\n\nclass Row extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeState = (id, event) => {\n      if (this.state.status == \"table-success\") {\n        this.setState({\n          status: \"table-danger\"\n        });\n        fetch('http://localhost:1337/professor/' + id, {\n          method: 'PATCH',\n          body: JSON.stringify({\n            hasResponded: \"false\"\n          })\n        });\n      } else {\n        this.setState({\n          status: \"table-success\"\n        });\n        fetch('http://localhost:1337/professor/' + id, {\n          method: 'PATCH',\n          body: JSON.stringify({\n            hasResponded: \"true\"\n          })\n        });\n      }\n    };\n\n    console.log(this);\n    this.state = {\n      status: props.status,\n      name: props.name,\n      email: props.email,\n      id: props.id\n    };\n  }\n\n  click() {\n    console.log(\"This is where the shell command used to send emails will be executed\");\n\n    const {\n      exec\n    } = require(\"child_process\"); // exec(\"ls -la\", (error, stdout, stderr)); \n    // \"echo \"When would you like to teach?\" | mail -s \"Pick your course time\" -S \"from=donotreply@cs.brandeis.edu\" pollack@brandeis.edu\"\n\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      class: this.state.status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, this.state.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, this.state.email), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, this.state.status == \"table-success\" ? \"Has Responded\" : this.state.status != \"table-danger\" ? \"\" : \"Has Not Responded Yet\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.click,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, \"Send Reminder to Respond\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.changeState.bind(this, this.state.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"Toggle Response Status\")));\n  }\n\n}\n\nexport default Row;","map":{"version":3,"names":["React","Row","Component","constructor","props","changeState","id","event","state","status","setState","fetch","method","body","JSON","stringify","hasResponded","console","log","name","email","click","exec","require","render","bind"],"sources":["/Users/archerheffern/Desktop/Code/course-scheduling/frontend/src/Row.js"],"sourcesContent":["import React from 'react';\nimport 'child_process';  // replace ^ if using ES modules\n\n\nclass Row extends React.Component {\n\n    constructor(props) {\n        super(props);\n        console.log(this)\n        this.state = {\n            status: props.status,\n            name: props.name,\n            email: props.email,\n            id: props.id\n        };\n    }\n\n    click() {\n        console.log(\"This is where the shell command used to send emails will be executed\");\n        const { exec } = require(\"child_process\");\n        // exec(\"ls -la\", (error, stdout, stderr)); \n\n\n        // \"echo \"When would you like to teach?\" | mail -s \"Pick your course time\" -S \"from=donotreply@cs.brandeis.edu\" pollack@brandeis.edu\"\n    }\n\n    changeState = (id, event) => {\n        if (this.state.status == \"table-success\") {\n            this.setState({ status: \"table-danger\" })\n            fetch('http://localhost:1337/professor/' + id, {\n                method: 'PATCH',\n                body: JSON.stringify({ hasResponded: \"false\" })\n            });\n        } else {\n            this.setState({ status: \"table-success\" })\n            fetch('http://localhost:1337/professor/' + id, {\n                method: 'PATCH',\n                body: JSON.stringify({ hasResponded: \"true\" })\n            });\n        }\n    }\n\n\n    render() {\n        return (\n            <tr class={this.state.status}>\n                <th scope=\"row\">{this.state.name}</th>\n                <td>{this.state.email}</td>\n                <td>\n                    {this.state.status == \"table-success\" ? \"Has Responded\" :\n                        this.state.status != \"table-danger\" ? \"\" : \"Has Not Responded Yet\"}\n                </td>\n                <td>\n                    <button onClick={this.click}>Send Reminder to Respond</button>\n                    {/* <button onClick={this.changeState.bind(this, this.state.id)}>Toggle Response Status</button> */}\n                    <button onClick={this.changeState.bind(this, this.state.id)}>Toggle Response Status</button>\n                </td>\n            </tr>\n        )\n    }\n}\n\nexport default Row;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP,C,CAAyB;;AAGzB,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;EAE9BC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,KAoBnBC,WApBmB,GAoBL,CAACC,EAAD,EAAKC,KAAL,KAAe;MACzB,IAAI,KAAKC,KAAL,CAAWC,MAAX,IAAqB,eAAzB,EAA0C;QACtC,KAAKC,QAAL,CAAc;UAAED,MAAM,EAAE;QAAV,CAAd;QACAE,KAAK,CAAC,qCAAqCL,EAAtC,EAA0C;UAC3CM,MAAM,EAAE,OADmC;UAE3CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;YAAEC,YAAY,EAAE;UAAhB,CAAf;QAFqC,CAA1C,CAAL;MAIH,CAND,MAMO;QACH,KAAKN,QAAL,CAAc;UAAED,MAAM,EAAE;QAAV,CAAd;QACAE,KAAK,CAAC,qCAAqCL,EAAtC,EAA0C;UAC3CM,MAAM,EAAE,OADmC;UAE3CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;YAAEC,YAAY,EAAE;UAAhB,CAAf;QAFqC,CAA1C,CAAL;MAIH;IACJ,CAlCkB;;IAEfC,OAAO,CAACC,GAAR,CAAY,IAAZ;IACA,KAAKV,KAAL,GAAa;MACTC,MAAM,EAAEL,KAAK,CAACK,MADL;MAETU,IAAI,EAAEf,KAAK,CAACe,IAFH;MAGTC,KAAK,EAAEhB,KAAK,CAACgB,KAHJ;MAITd,EAAE,EAAEF,KAAK,CAACE;IAJD,CAAb;EAMH;;EAEDe,KAAK,GAAG;IACJJ,OAAO,CAACC,GAAR,CAAY,sEAAZ;;IACA,MAAM;MAAEI;IAAF,IAAWC,OAAO,CAAC,eAAD,CAAxB,CAFI,CAGJ;IAGA;;EACH;;EAmBDC,MAAM,GAAG;IACL,oBACI;MAAI,KAAK,EAAE,KAAKhB,KAAL,CAAWC,MAAtB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI;MAAI,KAAK,EAAC,KAAV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAiB,KAAKD,KAAL,CAAWW,IAA5B,CADJ,eAEI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAK,KAAKX,KAAL,CAAWY,KAAhB,CAFJ,eAGI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACK,KAAKZ,KAAL,CAAWC,MAAX,IAAqB,eAArB,GAAuC,eAAvC,GACG,KAAKD,KAAL,CAAWC,MAAX,IAAqB,cAArB,GAAsC,EAAtC,GAA2C,uBAFnD,CAHJ,eAOI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI;MAAQ,OAAO,EAAE,KAAKY,KAAtB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,8BADJ,eAGI;MAAQ,OAAO,EAAE,KAAKhB,WAAL,CAAiBoB,IAAjB,CAAsB,IAAtB,EAA4B,KAAKjB,KAAL,CAAWF,EAAvC,CAAjB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,4BAHJ,CAPJ,CADJ;EAeH;;AAvD6B;;AA0DlC,eAAeL,GAAf"},"metadata":{},"sourceType":"module"}